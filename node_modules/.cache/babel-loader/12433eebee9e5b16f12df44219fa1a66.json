{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sebastian/react/react-by-example/rsvp/src/MainContent/GuestList/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Guest from './Guest';\nimport PendingGuest from './PendingGuest';\n\nconst GuestList = props => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: [/*#__PURE__*/_jsxDEV(PendingGuest, {\n    name: props.pendingGuest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), props.guests.filter(guest => !props.isFiltered || guest.isConfirmed).map((guest, index) => /*#__PURE__*/_jsxDEV(Guest, {\n    name: guest.name,\n    isConfirmed: guest.isConfirmed,\n    isEditing: guest.isEditing,\n    handleConfirmation: () => props.toggleConfirmation(guest.id),\n    handeToggleEditing: () => props.toggleEditing(guest.id),\n    setName: text => props.setName(text, guest.id),\n    handleRemove: () => props.removeGuest(guest.id)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c = GuestList;\nGuestList.propTypes = {\n  guests: PropTypes.array.isRequired,\n  toggleConfirmation: PropTypes.func.isRequired,\n  toggleEditing: PropTypes.func.isRequired,\n  setName: PropTypes.func.isRequired,\n  isFiltered: PropTypes.bool.isRequired,\n  removeGuest: PropTypes.func.isRequired,\n  pendingGuest: PropTypes.string.isRequired\n};\nexport default GuestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuestList\");","map":{"version":3,"sources":["/Users/sebastian/react/react-by-example/rsvp/src/MainContent/GuestList/index.js"],"names":["React","PropTypes","Guest","PendingGuest","GuestList","props","pendingGuest","guests","filter","guest","isFiltered","isConfirmed","map","index","name","isEditing","toggleConfirmation","id","toggleEditing","text","setName","removeGuest","propTypes","array","isRequired","func","bool","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,iBACrB;AAAA,0BACE,QAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,KAAK,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,UADF,EAEGD,KAAK,CAACE,MAAN,CACEC,MADF,CACSC,KAAK,IAAI,CAACJ,KAAK,CAACK,UAAP,IAAqBD,KAAK,CAACE,WAD7C,EAEEC,GAFF,CAEM,CAACH,KAAD,EAAQI,KAAR,kBACH,QAAC,KAAD;AAEE,IAAA,IAAI,EAAEJ,KAAK,CAACK,IAFd;AAGE,IAAA,WAAW,EAAEL,KAAK,CAACE,WAHrB;AAIE,IAAA,SAAS,EAAEF,KAAK,CAACM,SAJnB;AAKE,IAAA,kBAAkB,EAAE,MAAMV,KAAK,CAACW,kBAAN,CAAyBP,KAAK,CAACQ,EAA/B,CAL5B;AAME,IAAA,kBAAkB,EAAE,MAAMZ,KAAK,CAACa,aAAN,CAAoBT,KAAK,CAACQ,EAA1B,CAN5B;AAOE,IAAA,OAAO,EAAEE,IAAI,IAAId,KAAK,CAACe,OAAN,CAAcD,IAAd,EAAoBV,KAAK,CAACQ,EAA1B,CAPnB;AAQE,IAAA,YAAY,EAAE,MAAMZ,KAAK,CAACgB,WAAN,CAAkBZ,KAAK,CAACQ,EAAxB;AARtB,KACOJ,KADP;AAAA;AAAA;AAAA;AAAA,UAHH,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMT,S;AAkBNA,SAAS,CAACkB,SAAV,GAAsB;AACpBf,EAAAA,MAAM,EAAEN,SAAS,CAACsB,KAAV,CAAgBC,UADJ;AAEpBR,EAAAA,kBAAkB,EAAEf,SAAS,CAACwB,IAAV,CAAeD,UAFf;AAGpBN,EAAAA,aAAa,EAAEjB,SAAS,CAACwB,IAAV,CAAeD,UAHV;AAIpBJ,EAAAA,OAAO,EAAEnB,SAAS,CAACwB,IAAV,CAAeD,UAJJ;AAKpBd,EAAAA,UAAU,EAAET,SAAS,CAACyB,IAAV,CAAeF,UALP;AAMpBH,EAAAA,WAAW,EAAEpB,SAAS,CAACwB,IAAV,CAAeD,UANR;AAOpBlB,EAAAA,YAAY,EAAEL,SAAS,CAAC0B,MAAV,CAAiBH;AAPX,CAAtB;AAUA,eAAepB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Guest from './Guest';\nimport PendingGuest from './PendingGuest';\n\nconst GuestList = props =>\n  <ul>\n    <PendingGuest name={props.pendingGuest} />\n    {props.guests\n      .filter(guest => !props.isFiltered || guest.isConfirmed)\n      .map((guest, index) =>\n        <Guest\n          key={index}\n          name={guest.name}\n          isConfirmed={guest.isConfirmed}\n          isEditing={guest.isEditing}\n          handleConfirmation={() => props.toggleConfirmation(guest.id)}\n          handeToggleEditing={() => props.toggleEditing(guest.id)}\n          setName={text => props.setName(text, guest.id)}\n          handleRemove={() => props.removeGuest(guest.id)} />\n      )}\n  </ul>;\n\nGuestList.propTypes = {\n  guests: PropTypes.array.isRequired,\n  toggleConfirmation: PropTypes.func.isRequired,\n  toggleEditing: PropTypes.func.isRequired,\n  setName: PropTypes.func.isRequired,\n  isFiltered: PropTypes.bool.isRequired,\n  removeGuest: PropTypes.func.isRequired,\n  pendingGuest: PropTypes.string.isRequired\n};\n\nexport default GuestList;\n"]},"metadata":{},"sourceType":"module"}